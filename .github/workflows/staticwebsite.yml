# This is a basic workflow to help you get started with Actions

name: Static Web page module06

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    paths:
      - 'Undervisning/06module/staticwebpage/**'

  # For å avgjøre om det skal kjøres apply eller destroy
  # Kan bare fjerne denne og utkommentere den nederste hvis man heller ønsker å bruke
  # git commits for å avgjøre hva som skal gjøres
  workflow_dispatch:
    inputs:
      action_type:
        description: 'What actins to perform'
        required: true
        default: 'apply'
        type: choice
        options:
          - 'apply'
          - 'destroy'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  terraform:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    name: 'Build web resouces'
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      WORKING_DIR: ./Undervisning/06module/staticwebpage
      
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: 'Echo because I can'
        id: echooo
        run: echo "Le dude is here!" # Just because I can
    
      # Runs a single command using the runners shell
      - name: 'Terraform init'
        id: init
        run: terraform init
        working-directory: ${{ env.WORKING_DIR }}          

      - name: 'Terraform plan'
        id: plan
        run: terraform plan
        working-directory: ${{ env.WORKING_DIR }} 

      - name: 'Terraform apply'
        if: github.event.inputs.action_type == 'apply'
        id: apply
        run: terraform apply --auto-approve
        working-directory: ${{ env.WORKING_DIR }} 
      
      - name: 'Terraform destroy'
        if: github.event.inputs.action_type == 'destroy'
        id: destroy
        run: terraform destroy --auto-approve
        working-directory: ${{ env.WORKING_DIR }} 
                   
# Lagrer denne til når jeg skal bruke den

#      - name: 'Check last commit message'
#        id: commit
#        run: echo "::set-output name=message::$(git log --format=%B -n 1)"
#      - name: 'Conditionally run Terraform action'
#        run: |
#          if [[ "${{ steps.commit.outputs.message }}" == *"destroy"* ]]; then
#            terraform destroy -auto-approve
#          else
#            terraform apply -auto-approve
#          fi
#        working-directory: ${{ env.WORKING_DIR }}